<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

//Alarms
alarm[0] = 1;
alarm[1] = 1;

//Score Text
hue = irandom(255);
sat = 128;
val = 200;
sc_blend = make_color_hsv(hue,sat,val);
sc_rotb = 10;
sc_rotd = true;
sc_rota = 0;

//Scanlines
starty = 0;
tot    = 60;
inc    = room_height/tot;

//Level
global.level = 1;
global.rank  = "Cute";
global.lv_tonext = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Missiles
if(global.level &gt;= 3)
{
    repeat(irandom(3))
    {
        instance_create(view_wview,y,missile);
    }  
}
if(global.level &gt;= 5)
{
    var chance = irandom(25);
    if(chance == 0)instance_create(view_wview+48*2,283+318,aagun);
}
if(global.level &gt;= 10)
{
    var chance = irandom(25);
    if(chance == 0)instance_create(view_wview+48*2,irandom_range(283*2,318*2),tank);
}
alarm[1] = irandom(room_speed*2);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Civilians
//277 318

repeat(irandom(3)) 
{
    instance_create(view_xview,irandom_range(283*2,318*2),civilian);
}
alarm[0] = irandom(room_speed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inputs
global.M1 = mouse_check_button(mb_left);
//global.R = keyboard_check(ord('D')) or keyboard_check(vk_right);
global.R = true;
//global.L = keyboard_check(ord('A')) or keyboard_check(vk_left);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BG

background_xscale[0] = 2;
background_yscale[0] = 2;
background_xscale[1] = 2;
background_yscale[1] = 2;
background_xscale[2] = 2;
background_yscale[2] = 2;

var a =1, b = 2;

if(global.R)
{
    background_hspeed[0] = -a;
    background_hspeed[1] = -b;
    background_hspeed[2] = -b;
}
else
{
    background_hspeed[0] = 0;
    background_hspeed[1] = 0;
    background_hspeed[2] = 0;
}
/*
else if(global.L)
{
    background_hspeed[0] = a;
    background_hspeed[1] = b;
    background_hspeed[2] = b;
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Misc
if(alarm[0] &lt; 0) alarm[0] = 1;
if(alarm[1] &lt; 0) alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Levels (Ranks)

var proc = 75;

if(score &gt;= global.lv_tonext)
{
    global.level++;
    global.lv_tonext += proc/100*global.lv_tonext;
    if(!instance_exists(levelup))instance_create(view_xview + view_wview/2,view_yview + view_hview/2,levelup);
}

switch(global.level)
{
    case 1: global.rank  = "Cute"; break;
    case 2: global.rank  = "Hugable"; break;
    case 3: global.rank  = "Not Scary at All"; break;
    case 4: global.rank  = "Barely Scary"; break;
    case 5: global.rank  = "Freakish"; break;
    case 6: global.rank  = "Grose"; break;
    case 7: global.rank  = "Unfriendly"; break;
    case 8: global.rank  = "Disturbing"; break;
    case 9: global.rank  = "Pisspot"; break;
    case 10: global.rank = "Non Fleak?"; break;
    case 11: global.rank = "Shivers"; break;
    case 12: global.rank = "Spooky"; break;
    case 13: global.rank = "Basically Hitler"; break;
    case 14: global.rank = "Your Mom"; break;
    case 15: global.rank = "A Monster"; break;
    case 16: global.rank = "A True Monster"; break;
    case 17: global.rank = "Major Corporal Leutenant Monster"; break;
    case 18: global.rank = "The Scariest Monster"; break;
    case 19: global.rank = "Bringer of The End"; break;
    case 20: global.rank = "Eldrich God"; break;
    case 21: global.rank = "Better than Chatulu"; break;
    case 22: global.rank = "The Common Cold"; break;
    case 23: global.rank = "You can stop now..."; break;
    case 24: global.rank = "Go get some friends..."; break;
    case 25: global.rank = "Srsly..."; break;
    case 26: global.rank = "No more levels for you!"; break;
    case 27: global.rank = "Ok, have another one..."; break;
    case 28: global.rank = "Worthy"; break;
    case 29: global.rank = "Congressman of the Congres of Monsterdom"; break;
    case 30: global.rank = "Supreme Congressman of the Congres of Monsterdom"; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scanlines
draw_set_color(c_black);
draw_set_alpha(random_range(1,2)/9.5);
for(var i = 0 ; i &lt; tot ; i++)
{
    draw_line_width(0,starty+(i*inc),room_width,starty+(i*inc),4);
}
starty += 0.1;
if(starty &gt; inc ) starty = 0;
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GUI
draw_set_font(font);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
var text = "Score: " + string(score);
var w = string_width(text);
var h = string_height(text);
var scale = 2;

if(sc_rotd)
{
    if(sc_rota &lt;= sc_rotb)sc_rota+=0.25;
    else sc_rotd = false;
}
else
{
    if(sc_rota &gt;= -sc_rotb)sc_rota-=0.25;
    else sc_rotd = true;
}
if(hue &lt; 255) hue++;
else hue = 0;
sc_blend = make_color_hsv(hue,sat,val);



draw_set_color(c_black);
draw_text_transformed(view_wview-w+2,h*1,text,scale,scale,sc_rota);
draw_set_color(sc_blend);
draw_text_transformed(view_wview-w,h*1,text,scale,scale,sc_rota);
draw_set_color(c_white);

var text = "Level: " + string(global.level);
var w = string_width(text);
var h = string_height(text);
draw_set_color(c_black);
draw_text_transformed(view_wview-w+2,h*2,text,scale,scale,sc_rota);
draw_set_color(sc_blend);
draw_text_transformed(view_wview-w,h*2,text,scale,scale,sc_rota);
draw_set_color(c_white);

//EXP
draw_sprite_ext(s_expbar,0,view_wview-128,h*3,256/32,1,sc_rota,c_black,1);
draw_sprite_ext(s_expbar,1,view_wview-128,h*3,score/global.lv_tonext*256/32,0.75,sc_rota,sc_blend,1);

var text = global.rank;
var w = string_width(text);
var h = string_height(text);
draw_set_color(c_black);
draw_text_transformed(view_wview-w+2,h*4,text,scale,scale,sc_rota);
draw_set_color(sc_blend);
draw_text_transformed(view_wview-w,h*4,text,scale,scale,sc_rota);
draw_set_color(c_white);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
